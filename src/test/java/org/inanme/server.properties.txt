broker.id=1
listeners=PLAINTEXT://:9093
log.dir=/tmp/kafka-logs-1
zookeeper.connect=localhost:2181
zookeeper.connection.timeout.ms=6000

broker.id=2
listeners=PLAINTEXT://:9094
log.dir=/tmp/kafka-logs-2
zookeeper.connect=localhost:2181
zookeeper.connection.timeout.ms=6000

broker.id=3
listeners=PLAINTEXT://:9095
log.dir=/tmp/kafka-logs-3
zookeeper.connect=localhost:2181
zookeeper.connection.timeout.ms=6000

dataDir=/tmp/zookeeper


bin/zookeeper-server-start.sh config/zookeeper.properties
bin/kafka-server-start.sh config/server-1.properties
bin/kafka-server-start.sh config/server-2.properties
bin/kafka-server-start.sh config/server-3.properties

bin/kafka-server-start.sh config/server.properties

bin/kafka-console-producer.sh --broker-list localhost:9093 --topic my-replicated-topic
bin/kafka-console-consumer.sh --bootstrap-server localhost:9093 --topic my-replicated-topic --from-beginning


Each partition can be replicated across multiple Kafka broker nodes to tolerate node failures.
One of a partition's replicas is chosen as leader, and the leader handles all reads and writes of messages in that partition.

bin/kafka-streams-application-reset.sh --bootstrap-servers localhost:9093 --application-id streams-wordcount --input-topics streams-file-input

==========
bin/kafka-console-producer.sh --broker-list localhost:9093 --topic my-replicated-topic
bin/kafka-console-consumer.sh --bootstrap-server localhost:9093 --topic my-replicated-topic --from-beginning
==========

bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 2 --topic intstream
bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 3 --topic a-topic

bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic streams-wordcount-output

bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic name-topic
bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 3 --partitions 1 --topic surname-topic

bin/kafka-console-producer.sh --broker-list localhost:9093 --topic streams-file-input < file-input.txt
bin/kafka-console-consumer.sh --bootstrap-server localhost:9093 \
            --topic streams-wordcount-output \
            --from-beginning \
            --formatter kafka.tools.DefaultMessageFormatter \
            --property print.key=true \
            --property print.value=true \
            --property key.deserializer=org.apache.kafka.common.serialization.StringDeserializer \
            --property value.deserializer=org.apache.kafka.common.serialization.LongDeserializer


bin/kafka-topics.sh --list --zookeeper localhost:2181